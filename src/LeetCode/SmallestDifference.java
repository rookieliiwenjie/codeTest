package LeetCode;

import java.util.Arrays;
import java.util.stream.Collectors;

/**
 * @Author: wenjie.li
 * @Date: 2023/5/6 11:29 下午
 * @Description:
 */
public class SmallestDifference {

    public static void main(String[] args) {
        String q = "15534\n" +
                "15536\n" +
                "15541\n" +
                "15545\n" +
                "15550\n" +
                "15551\n" +
                "15552\n" +
                "15553\n" +
                "15557\n" +
                "15560\n" +
                "286682\n" +
                "15564\n" +
                "15566\n" +
                "15569\n" +
                "15573\n" +
                "15581\n" +
                "84962\n" +
                "22921\n" +
                "84982\n" +
                "85032\n" +
                "85072\n" +
                "85092\n" +
                "85132\n" +
                "85152\n" +
                "85202\n" +
                "85232\n" +
                "85272\n" +
                "85302\n" +
                "85312\n" +
                "85322\n" +
                "473281\n" +
                "594881\n" +
                "655841";

        String collect = Arrays.stream(q.split("\n")).collect(Collectors.joining(","));
        System.out.println(collect);
        System.out.println(collect.split(",").length);
//        String s = "6,7,8,9,10,47,13,14,15,16,18,24,20,21,22,23,19,25,26,27,28,12,30,32,33,34,35,36,37,38,82,40,41,42,43,44,45,46,29,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,39,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,359,360,361,362,363,364,365,366,367,368,369,370,371,372";
//        String[] split = s.split(",");
//        System.out.println("split.length = " + split.length);
    }
    public static int smallestDifference(int[] a, int[] b) {
        Arrays.sort(a);
        Arrays.sort(b);
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < b.length; j++) {
                if(b[j]>a[i]) {
                    min = (int) Math.min(Math.abs(((long)b[j]-(long)a[i])),min);
                    break;
                }else {
                    min = (int) Math.min(((long)a[i]-(long)b[j]), min);
                }
                if(min==0){
                    return 0;
                }

            }
        }
        return min;
    }
}
